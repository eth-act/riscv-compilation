{"$message_type":"diagnostic","message":"cannot find derive macro `RustcDecodable` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":252,"byte_end":266,"line_start":15,"line_end":15,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]","highlight_start":38,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find derive macro `RustcDecodable` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:15:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find derive macro `RustcEncodable` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":268,"byte_end":282,"line_start":15,"line_end":15,"column_start":54,"column_end":68,"is_primary":true,"text":[{"text":"#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]","highlight_start":54,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find derive macro `RustcEncodable` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:15:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find derive macro `RustcDecodable` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1828,"byte_end":1842,"line_start":79,"line_end":79,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]","highlight_start":38,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find derive macro `RustcDecodable` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:79:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find derive macro `RustcEncodable` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1844,"byte_end":1858,"line_start":79,"line_end":79,"column_start":54,"column_end":68,"is_primary":true,"text":[{"text":"#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]","highlight_start":54,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find derive macro `RustcEncodable` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:79:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find derive macro `RustcDecodable` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":2768,"byte_end":2782,"line_start":122,"line_end":122,"column_start":38,"column_end":52,"is_primary":true,"text":[{"text":"#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]","highlight_start":38,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find derive macro `RustcDecodable` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:122:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find derive macro `RustcEncodable` in this scope","code":null,"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":2784,"byte_end":2798,"line_start":122,"line_end":122,"column_start":54,"column_end":68,"is_primary":true,"text":[{"text":"#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]","highlight_start":54,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find derive macro `RustcEncodable` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:122:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Copy, Clone, PartialEq, Eq, RustcDecodable, RustcEncodable)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `G1: Decodable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1915,"byte_end":1917,"line_start":83,"line_end":83,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"impl Group for G1 {","highlight_start":16,"highlight_end":18}],"label":"the trait `Decodable` is not implemented for `G1`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Decodable`:\n  ()\n  (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T10, T11)\n  (T11,)\n  (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T4, T5, T6, T7, T8, T9, T10, T11)\nand 78 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Group`","code":null,"level":"note","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1306,"byte_end":1311,"line_start":56,"line_end":56,"column_start":11,"column_end":16,"is_primary":false,"text":[{"text":"pub trait Group:","highlight_start":11,"highlight_end":16}],"label":"required by a bound in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1358,"byte_end":1384,"line_start":58,"line_end":58,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"        rustc_serialize::Decodable +","highlight_start":9,"highlight_end":35}],"label":"required by this bound in `Group`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `G1: Decodable` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:83:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Group for G1 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Decodable` is not implemented for `G1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Decodable`:\u001b[0m\n\u001b[0m             ()\u001b[0m\n\u001b[0m             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m             (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m             (T10, T11)\u001b[0m\n\u001b[0m             (T11,)\u001b[0m\n\u001b[0m             (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m             (T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m             (T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m           and 78 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Group`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:58:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Group:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rustc_serialize::Encodable +\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rustc_serialize::Decodable +\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Group`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `G1: Encodable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1915,"byte_end":1917,"line_start":83,"line_end":83,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"impl Group for G1 {","highlight_start":16,"highlight_end":18}],"label":"the trait `Encodable` is not implemented for `G1`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Encodable`:\n  &'a T\n  ()\n  (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T10, T11)\n  (T11,)\n  (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T3, T4, T5, T6, T7, T8, T9, T10, T11)\nand 82 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Group`","code":null,"level":"note","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1306,"byte_end":1311,"line_start":56,"line_end":56,"column_start":11,"column_end":16,"is_primary":false,"text":[{"text":"pub trait Group:","highlight_start":11,"highlight_end":16}],"label":"required by a bound in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1321,"byte_end":1347,"line_start":57,"line_end":57,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"        rustc_serialize::Encodable +","highlight_start":9,"highlight_end":35}],"label":"required by this bound in `Group`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `G1: Encodable` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:83:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Group for G1 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Encodable` is not implemented for `G1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Encodable`:\u001b[0m\n\u001b[0m             &'a T\u001b[0m\n\u001b[0m             ()\u001b[0m\n\u001b[0m             (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m             (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m             (T10, T11)\u001b[0m\n\u001b[0m             (T11,)\u001b[0m\n\u001b[0m             (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m             (T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m           and 82 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Group`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:57:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Group:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rustc_serialize::Encodable +\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Group`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `G2: Decodable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":2855,"byte_end":2857,"line_start":126,"line_end":126,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"impl Group for G2 {","highlight_start":16,"highlight_end":18}],"label":"the trait `Decodable` is not implemented for `G2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Decodable`:\n  ()\n  (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T10, T11)\n  (T11,)\n  (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T4, T5, T6, T7, T8, T9, T10, T11)\nand 78 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Group`","code":null,"level":"note","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1306,"byte_end":1311,"line_start":56,"line_end":56,"column_start":11,"column_end":16,"is_primary":false,"text":[{"text":"pub trait Group:","highlight_start":11,"highlight_end":16}],"label":"required by a bound in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1358,"byte_end":1384,"line_start":58,"line_end":58,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"        rustc_serialize::Decodable +","highlight_start":9,"highlight_end":35}],"label":"required by this bound in `Group`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `G2: Decodable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:126:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Group for G2 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Decodable` is not implemented for `G2`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Decodable`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m              (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m              (T10, T11)\u001b[0m\n\u001b[0m              (T11,)\u001b[0m\n\u001b[0m              (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m              (T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m              (T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m            and 78 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Group`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:58:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Group:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rustc_serialize::Encodable +\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rustc_serialize::Decodable +\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Group`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `G2: Encodable` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":2855,"byte_end":2857,"line_start":126,"line_end":126,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"impl Group for G2 {","highlight_start":16,"highlight_end":18}],"label":"the trait `Encodable` is not implemented for `G2`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `Encodable`:\n  &'a T\n  ()\n  (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T10, T11)\n  (T11,)\n  (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\n  (T3, T4, T5, T6, T7, T8, T9, T10, T11)\nand 82 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Group`","code":null,"level":"note","spans":[{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1306,"byte_end":1311,"line_start":56,"line_end":56,"column_start":11,"column_end":16,"is_primary":false,"text":[{"text":"pub trait Group:","highlight_start":11,"highlight_end":16}],"label":"required by a bound in this trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs","byte_start":1321,"byte_end":1347,"line_start":57,"line_end":57,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"        rustc_serialize::Encodable +","highlight_start":9,"highlight_end":35}],"label":"required by this bound in `Group`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `G2: Encodable` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:126:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Group for G2 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Encodable` is not implemented for `G2`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `Encodable`:\u001b[0m\n\u001b[0m              &'a T\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m              (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m              (T10, T11)\u001b[0m\n\u001b[0m              (T11,)\u001b[0m\n\u001b[0m              (T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m              (T3, T4, T5, T6, T7, T8, T9, T10, T11)\u001b[0m\n\u001b[0m            and 82 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Group`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/gregg/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bn-0.4.3/src/lib.rs:57:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Group:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        rustc_serialize::Encodable +\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Group`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 10 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 10 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
